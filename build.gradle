import work.lclpnet.build.task.GithubDeploymentTask

plugins {
    id 'java'
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id 'gradle-build-utils' version '1.7.0'
}

Properties props = buildUtils.loadProperties('publish.properties')

version = buildUtils.gitVersion()
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    maven {
        url = "https://maven.parchmentmc.org"
    }

    maven {
        url "https://repo.lclpnet.work/repository/internal"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered {
        it.parchment("org.parchmentmc.data:parchment-1.20.6:${project.parchment_version}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    })
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "maven.modrinth:sodium:${project.sodium_version}"
    modImplementation "maven.modrinth:iris:${project.iris_version}"
    implementation "io.github.douira:glsl-transformer:${project.glsl_transformer_version}"
    implementation "org.anarres:jcpp:${project.jcpp_version}"
    implementation "org.antlr:antlr4-runtime:${project.antlr4_version}"

    /* other Java dependencies */
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}

loom {
    accessWidenerPath = file("src/main/resources/mightyarchitect.accesswidener")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 21

    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release.set(targetVersion)
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

def env = System.getenv()

tasks.register("github", GithubDeploymentTask) {
    dependsOn tasks.remapJar

    config {
        token = env.get("GITHUB_TOKEN")
        repository = env.get("GITHUB_REPOSITORY")
    }

    release {
        title = "[$project.minecraft_version] $project.name $project.version"
        tag = buildUtils.latestTag()
    }

    assets.add(tasks.remapJar.archiveFile.get())
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            from components.java

            pom {
                name = 'The Fabric Architect'
                description = 'Design elaborate buildings within a minute!'
            }
        }
    }

    buildUtils.setupPublishRepository(repositories, props)
}